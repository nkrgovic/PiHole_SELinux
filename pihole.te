# Written for PiHole by Nikola Krgovic (nkrgovic at gmail dot com )
# Release under EUPL

module pihole 1.0;

require {
	type bin_t;
	type dnsmasq_etc_t;
	type etc_runtime_t;
	type etc_t;
	type faillog_t;
	type httpd_log_t;
	type httpd_t;
	type ifconfig_t;
	type initrc_exec_t;
	type initrc_t;
	type initrc_var_log_t;
	type initrc_var_run_t;
	type lastlog_t;
	type logrotate_exec_t;
	type logrotate_var_lib_t;
	type security_t;
	type shadow_t;
	type systemd_logind_t;
	type unreserved_port_t;
	type var_log_t;
	type var_run_t;
	type var_t;
        type security_t;
	class capability { audit_write sys_resource setfcap};
	class dbus send_msg;
	class dir { add_name read remove_name write setattr};
	class file { execmod getattr map open read write setattr append create ioctl rename unlink};
	class httpd setfcap;
	class netlink_audit_socket nlmsg_relay;
	class netlink_selinux_socket { bind create } ;
	class passwd rootok;
	class process {signal setrlimit};
	class security compute_av;
	class tcp_socket name_connect;
}

#============= httpd_t ==============
allow httpd_t bin_t:file { execmod setattr };
allow httpd_t dnsmasq_etc_t:dir { add_name read remove_name write };
allow httpd_t dnsmasq_etc_t:file { append create ioctl open read rename setattr unlink write };
allow httpd_t etc_runtime_t:file { append setattr write };
allow httpd_t etc_t:dir { add_name remove_name setattr write };
allow httpd_t etc_t:file { append create rename setattr unlink write};
allow httpd_t faillog_t:file { open read };
allow httpd_t httpd_log_t:file write;
allow httpd_t initrc_exec_t:file { ioctl open read };
allow httpd_t initrc_t:process signal;
allow httpd_t initrc_var_log_t:dir setattr;
allow httpd_t initrc_var_run_t:file { setattr write };
allow httpd_t lastlog_t:file { open read write };
allow httpd_t logrotate_var_lib_t:dir { add_name remove_name write };
allow httpd_t logrotate_var_lib_t:file { create open read rename setattr unlink write };
allow httpd_t security_t:security compute_av;
allow httpd_t self:capability setfcap;
allow httpd_t self:netlink_selinux_socket { bind create };
allow httpd_t self:passwd rootok;
allow httpd_t systemd_logind_t:dbus send_msg;
allow httpd_t var_log_t:file { open read setattr write create};
allow httpd_t var_run_t:dir setattr;
allow httpd_t var_t:file { open read };

#============= ifconfig_t ==============
allow ifconfig_t etc_runtime_t:file append;

#============= systemd_logind_t ==============
allow systemd_logind_t httpd_t:dbus send_msg;
